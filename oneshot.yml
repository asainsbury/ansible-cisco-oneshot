---
- hosts: ios
  gather_facts: false
  connection: local

  vars:
    cli:
      username: "vagrant"
      password: "vagrant"

  tasks:
    
    # ----
    # TODO
    # ----
    # Aim to make the inventory file from jinja2
    # Taken from extra vars, not run everytime
    # Add a debug option, again from extra vars and add to all debugs
    # Add tags to all tasks
    # Add option to backup before a change
    # Add option to backup after a change
    # Make it NXOS or IOS/XE agnostic 
    # Turn into a role at this point

    ################################################################
    # Run tests first - any issues we exit the play
    ################################################################    

    - name: Search for the existance of the code {{inventory_hostname}}
      ios_command:
        commands: "{{ hostvars[item]['check1'] }}"
        provider: "{{ cli }}"
      
      with_items: "{{ groups['ios'] }}"
      register: show_test_a

    - name: Grab the serial number of {{inventory_hostname}}
      ios_command:
        commands: "{{ hostvars[item]['check2'] }}"
        provider: "{{ cli }}"
      
      with_items: "{{ groups['ios'] }}"
      register: show_test_b

    ################################################################
    # Set the variables to resuse later
    ################################################################

    - set_fact:
        config: "{{ hostvars[item]['line1'] }}"
      with_items: "{{ groups['ios'] }}"

    - set_fact:
        serno: "{{ hostvars[item]['serno'] }}"
      with_items: "{{ groups['ios'] }}"

    ################################################################
    # Just debug the result from the fact to see what happened
    ################################################################

    - name: debug
      debug:
        msg: "Debug output from test a  {{show_test_a.results[0]}}"

    - name: debug
      debug:
        msg: "Debug output from test b  {{show_test_b.results[0]}}"


    - name: debug
      debug:
        var: config

    - name: debug
      debug:
        var: serno

    ################################################################
    # Set the results of the above actions, to test with meta handlers
    ################################################################

    - name: First test the config
      set_fact: 
        test1_result: "1"

      when: (config in item)
      with_items: "{{show_test_a.results[0].stdout}}"

    - name: Second test the serial
      set_fact: 
        test2_result: "1"

      when: (serno in item)
      with_items: "{{show_test_b.results[0].stdout}}"

    ################################################################
    # More debugging
    ################################################################

    - name: debug
      debug:
        var: test1_result

    - name: debug
      debug:
        var: test2_result
  
    ################################################################
    # At this point we can stack up the exit conditions with the logic
    # in the When statement
    ################################################################

    - meta: end_play
      when: (test1_result is defined) or (test2_result is not defined)

    ################################################################
    # Push the config here
    ################################################################   

    - name: Push a set of commands
      ios_config:
        provider: "{{ cli }}"
        lines:
          - "{{ hostvars[item]['line1'] }}"
          - "{{ hostvars[item]['line2'] }}"

        parents: "{{ hostvars[item]['parent'] }}"
        save_when: modified


      register: "set_interface"

      with_items: "{{ groups['ios'] }}"
      tags:
        - description

      # Sort of a redundant check, but I will leave it in
      when:
        - test1_result is not defined

    # # ################################################################
    # # # backup the config here
    # # ################################################################ 


